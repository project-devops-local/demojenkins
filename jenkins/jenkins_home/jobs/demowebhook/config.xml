<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1508.v9cb_c3a_a_89dfd">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2247.va_423189a_7dff"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2247.va_423189a_7dff">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.14"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.wangyin.parameter.WHideParameterDefinition plugin="hidden-parameter@414.vfe0a_8b_052546">
          <name>payload</name>
          <description>payload</description>
          <defaultValue></defaultValue>
        </com.wangyin.parameter.WHideParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <org.jenkinsci.plugins.gwt.GenericTrigger plugin="generic-webhook-trigger@2.3.1">
          <spec></spec>
          <regexpFilterText></regexpFilterText>
          <regexpFilterExpression></regexpFilterExpression>
          <genericRequestVariables>
            <org.jenkinsci.plugins.gwt.GenericRequestVariable>
              <key>payload</key>
              <regexpFilter>$.payload</regexpFilter>
            </org.jenkinsci.plugins.gwt.GenericRequestVariable>
          </genericRequestVariables>
          <printPostContent>false</printPostContent>
          <printContributedVariables>false</printContributedVariables>
          <causeString>Generic Cause</causeString>
          <token>demotokenjenkins</token>
          <tokenCredentialId></tokenCredentialId>
          <silentResponse>false</silentResponse>
          <overrideQuietPeriod>false</overrideQuietPeriod>
          <shouldNotFlattern>false</shouldNotFlattern>
          <allowSeveralTriggersPerBuild>false</allowSeveralTriggersPerBuild>
        </org.jenkinsci.plugins.gwt.GenericTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4050.v8b_a_69b_587c39">
    <script>pipeline {
    agent any
    stages {
        stage(&apos;Procesar Payload&apos;) {
            steps {
                script {
                    // Parsear el payload JSON
                    def jsonPayload = readJSON text: params.payload
                    
                    // Acceder a la propiedad &apos;action&apos;
                    def action = jsonPayload.action
                    println &quot;Acci√≥n: ${action}&quot;
                    
                    // Acceder a la propiedad &apos;pull_request.url&apos;
                    def pullRequestUrl = jsonPayload.pull_request.url
                    echo &quot;URL del Pull Request: ${pullRequestUrl}&quot;

                    //url
                    def urlgit= jsonPayload.pull_request.base.repo.html_url

                    println &quot;urlgit: &quot;+urlgit

                    def branch = jsonPayload.pull_request.head.ref

                    println &quot;branch: &quot;+branch

                    checkout scmGit(branches: [[name: branch]], extensions: [], userRemoteConfigs: [[credentialsId: &apos;github-credential&apos;, url: urlgit]])

                    sh &quot;ls -ltra&quot;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>